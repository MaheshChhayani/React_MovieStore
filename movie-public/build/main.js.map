{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/framework/framework.component.ts","./src/app/framework/framework.component.html","./src/environments/environment.ts","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/app/movie-list/movie-list.component.ts","./src/app/movie-list/movie-list.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/movie-service.service.ts","./src/app/details-page/details-page.component.ts","./src/app/details-page/details-page.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>About my site</h1>\n<p>This site is having a list of popular movies and their writers.</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\" style=\"background-color: red;\">\n    <a class=\"navbar-brand\" routerLink=\"\">Movie List </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"> </span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\" >\n        <ul class=\"navbar-nav mr-auto\" >\n            <li class=\"nav-item active\"><a class=\"nav-link\" routerLink=\"/\">Home</a></li>\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"movies\">Movie List</a></li>\n            <li class=\"nav-item\" ><a class=\"nav-link\" routerLink=\"about\">About</a></li>\n        </ul>\n        <span class=\"navbar-text\" > </span>\n    </div>\n</nav>\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Movie} from '../movie';\nimport { MovieServiceService } from '../movie-service.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css'],\n  providers: [MovieServiceService]\n})\nexport class CreateComponent implements OnInit {\n\n  public newMovie: Movie = {\n    _id:'',\n    title:'',\n    writer:'',\n    rating:0,\n    date:new Date,\n    production:''\n  };\n\n  constructor(private movieService: MovieServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  public createNewMovie(newMovie: Movie): void{\n    this.movieService.createMovie(newMovie);\n  }\n\n}\n","<p>create works!</p>\n<form (ngSubmit)=\"createNewMovie(newMovie)\">\n    <div>\n        <label for=\"title\">Title:</label>\n        <input type=\"text\" [(ngModel)]=\"newMovie.title\" id=\"title\" name=\"title\" required=\"required\">\n    </div>\n    <div>\n        <label for=\"writer\">Writer:</label>\n        <input type=\"text\" [(ngModel)]=\"newMovie.writer\" id=\"writer\" name=\"writer\" required=\"required\">\n    </div> \n    <div>\n        <label for=\"rating\">Rating:</label>\n        <input type=\"number\" [(ngModel)]=\"newMovie.rating\" id=\"rating\" name=\"rating\" required=\"required\">\n    </div> \n    <div>\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" [(ngModel)]=\"newMovie.date\" id=\"date\" name=\"date\" required=\"required\">\n    </div> \n    <div>\n        <label for=\"production\">Production:</label>\n        <input type=\"text\" [(ngModel)]=\"newMovie.production\" id=\"production\" name=\"production\" required=\"required\">\n    </div> \n    <div >\n        <button type=\"submit\">Create</button>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {Movie} from '../movie';\nimport {MovieServiceService} from '../movie-service.service';\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css'],\n  providers: [MovieServiceService]\n})\nexport class MovieListComponent implements OnInit {\n\n  movies:Movie[];\n\n  constructor(private movieService: MovieServiceService) { }\n\n  ngOnInit(): void {\n    this.movieService\n    .getMovies()\n      .then((movies: Movie[])=>{\n        this.movies = movies.map( movie => {\n          return movie;\n        });\n      });\n  }\n\n}\n","<h1>Movie List</h1>\n<p>Here is the list of Movies</p>\n <ul>\n     <li *ngFor=\"let movie of movies;\">\n         <a routerLink=\"/movies/{{movie._id}}\">{{movie.title}}</a>\n     </li>\n </ul>\n <a type=\"button\" value=\"Add movie\" routerLink=\"/create\">Add movie</a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Movie List</h1>\n<p>Welcome to My Movie List</p>","import { Injectable } from '@angular/core';\nimport {Movie} from './movie';\nimport {HttpClient,HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieServiceService {\n\n  private moviesUrl='http://localhost:3000/api/movies';\n  constructor(private http:HttpClient) { }\n  getMovies():Promise<void|Movie[]>{\n    return this.http.get(this.moviesUrl).toPromise().then(response=>response as Movie[]).catch(this.handleError);\n  }\n\n  getSingleMovie(movieId:string):Promise<void|Movie>{\n    return this.http.get(this.moviesUrl+'/'+movieId).toPromise().then(response=>response as Movie).catch(this.handleError);\n  }\n\n  createMovie(newMovie: Movie): Promise<void | Movie>{\n    return this.http.post(this.moviesUrl,newMovie).toPromise().then(response=> response as Movie).catch(this.handleError);\n  }\n\n  updateMovie(newMovie: Movie):Promise<void | Movie>{\n    return this.http.put(this.moviesUrl+'/'+newMovie._id,newMovie)\n    .toPromise()\n    .then(r=>r as Movie)\n    .catch(this.handleError);\n  }\n\n  deleteMovie(movieId:string):Promise<void|Movie>{\n    return this.http.delete(this.moviesUrl+'/'+movieId)\n    .toPromise()\n    .then(r=>r as Movie)\n    .catch(this.handleError);\n  }\n\n  private handleError(error:any){        \n    console.log(\"error\");\n    console.log(error);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Movie } from '../movie';\nimport { MovieServiceService } from '../movie-service.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-details-page',\n  templateUrl: './details-page.component.html',\n  styleUrls: ['./details-page.component.css'],\n  providers:[MovieServiceService]\n})\nexport class DetailsPageComponent implements OnInit {\n\n  constructor(private movieService: MovieServiceService, private route: ActivatedRoute) { }\n\n  newMovie: Movie;\n\n\n  ngOnInit(): void {\n    this.route.params.pipe(switchMap((params: Params) => {\n      return this.movieService.getSingleMovie(params.movieid);\n    })).subscribe((newMovie: Movie) => {\n      console.log('Selected Movie', newMovie);\n      this.newMovie = newMovie;\n    });\n  }\n\n  public updateNewMovie():void{\n    this.movieService.updateMovie(this.newMovie)\n    .then((newMovie:Movie)=>{\n      this.newMovie=newMovie;\n    })\n  }\n\n  public deleteMovie(): void{\n    this.movieService.deleteMovie(this.newMovie._id);\n  }\n\n}\n","<h1>movie Info</h1>\n\n<form (ngSubmit)=\"updateNewMovie()\">\n    <div>\n        <label for=\"title\">Title:</label>\n        <input type=\"text\" [(ngModel)]=\"newMovie.title\" id=\"title\" name=\"title\" required=\"required\">\n    </div>\n    <div>\n        <label for=\"writer\">Writer:</label>\n        <input type=\"text\" [(ngModel)]=\"newMovie.writer\" id=\"writer\" name=\"writer\" required=\"required\">\n    </div> \n    <div>\n        <label for=\"rating\">Rating:</label>\n        <input type=\"number\" [(ngModel)]=\"newMovie.rating\" id=\"rating\" name=\"rating\" required=\"required\">\n    </div> \n    <div>\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" [(ngModel)]=\"newMovie.date\" id=\"date\" name=\"date\" required=\"required\">\n    </div> \n    <div>\n        <label for=\"production\">Production:</label>\n        <input type=\"text\" [(ngModel)]=\"newMovie.production\" id=\"production\" name=\"production\" required=\"required\">\n    </div> \n    <div >\n        <button type=\"submit\">Update</button>\n        <button type=\"button\" (click)=\"deleteMovie()\">delete</button>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MovieListComponent } from './movie-list/movie-list.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CreateComponent } from './create/create.component';\nimport { DetailsPageComponent } from './details-page/details-page.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    MovieListComponent,\n    AboutComponent,\n    HomepageComponent,\n    FrameworkComponent,\n    CreateComponent,\n    DetailsPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component:HomepageComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'movies',\n        component: MovieListComponent\n      },\n      {\n        path:'create',\n        component:CreateComponent\n      },\n      {\n        path:'movies/:movieid',\n        component:DetailsPageComponent\n      }\n    ])\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: '/'}],\n  bootstrap: [FrameworkComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}